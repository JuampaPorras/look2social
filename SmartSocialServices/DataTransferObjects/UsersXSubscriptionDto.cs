//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace SmartSocialServices.DataTransferObjects
{
    
    [DataContract(Name = "UsersXSubscriptionDto", Namespace = "http://www.SmartSocial.com/dto/" , IsReference = true) ]
    public partial class UsersXSubscriptionDto
    {
         #region Primitive Properties
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual int idUserXSubscription
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual int idSubscription
        {
     
    		
            get { return _idSubscription; }
            set
            {
                if (_idSubscription != value)
                {
                    if (ServiceSubscription != null && ServiceSubscription.idServiceSubscription != value)
                    {
                        ServiceSubscription = null;
                    }
                    _idSubscription = value;
                }
            }
        }
        private int _idSubscription;
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual int idUser
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual Nullable<System.DateTime> DateCreated
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual Nullable<int> IdSubscriptionRoleTypes
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual Nullable<bool> IsActive
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
    	[DataMember(EmitDefaultValue = false)]
        public virtual ServiceSubscriptionDto ServiceSubscription
        {
            get { return _serviceSubscription; }
            set
            {
                if (!ReferenceEquals(_serviceSubscription, value))
                {
                    var previousValue = _serviceSubscription;
                    _serviceSubscription = value;
                    FixupServiceSubscription(previousValue);
                }
            }
        }
        private ServiceSubscriptionDto _serviceSubscription;

        #endregion

        #region Association Fixup
    
        private void FixupServiceSubscription(ServiceSubscriptionDto previousValue)
        {
            if (previousValue != null && previousValue.UsersXSubscriptions.Contains(this))
            {
                previousValue.UsersXSubscriptions.Remove(this);
            }
    
            if (ServiceSubscription != null)
            {
                if (!ServiceSubscription.UsersXSubscriptions.Contains(this))
                {
                    ServiceSubscription.UsersXSubscriptions.Add(this);
                }
                if (idSubscription != ServiceSubscription.idServiceSubscription)
                {
                    idSubscription = ServiceSubscription.idServiceSubscription;
                }
            }
        }

        #endregion

    }
}
