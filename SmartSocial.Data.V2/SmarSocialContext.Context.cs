//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartSocial.Data.V2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SmartSocialContext : DbContext
    {
        public SmartSocialContext()
            : base("name=SmartSocialContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AspNetRole> AspNetRoles { get; set; }
        public DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public DbSet<AspNetUser> AspNetUsers { get; set; }
        public DbSet<ChartType> ChartTypes { get; set; }
        public DbSet<Country> Countries { get; set; }
        public DbSet<DataType> DataTypes { get; set; }
        public DbSet<SeriesValue> SeriesValues { get; set; }
        public DbSet<ServiceDelivery> ServiceDeliveries { get; set; }
        public DbSet<ServiceSubscription> ServiceSubscriptions { get; set; }
        public DbSet<SmartChart> SmartCharts { get; set; }
        public DbSet<SmartReport> SmartReports { get; set; }
        public DbSet<SocialPost> SocialPosts { get; set; }
        public DbSet<SocialPostTMP> SocialPostTMPs { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<UsersXSubscription> UsersXSubscriptions { get; set; }
        public DbSet<ChartComment> ChartComments { get; set; }
        public DbSet<ChartSery> ChartSeries { get; set; }
        public DbSet<Company> Companies { get; set; }
        public DbSet<DataProvider> DataProviders { get; set; }
        public DbSet<DataProviderXChartType> DataProviderXChartTypes { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int CreateChartFromTemplate(Nullable<int> idReport, Nullable<int> nEWIdReport)
        {
            var idReportParameter = idReport.HasValue ?
                new ObjectParameter("IdReport", idReport) :
                new ObjectParameter("IdReport", typeof(int));
    
            var nEWIdReportParameter = nEWIdReport.HasValue ?
                new ObjectParameter("NEWIdReport", nEWIdReport) :
                new ObjectParameter("NEWIdReport", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateChartFromTemplate", idReportParameter, nEWIdReportParameter);
        }
    
        public virtual int CreateReportFromTemplate(Nullable<int> idReport, Nullable<int> idServiceDelivery, ObjectParameter idReportOut)
        {
            var idReportParameter = idReport.HasValue ?
                new ObjectParameter("IdReport", idReport) :
                new ObjectParameter("IdReport", typeof(int));
    
            var idServiceDeliveryParameter = idServiceDelivery.HasValue ?
                new ObjectParameter("idServiceDelivery", idServiceDelivery) :
                new ObjectParameter("idServiceDelivery", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateReportFromTemplate", idReportParameter, idServiceDeliveryParameter, idReportOut);
        }
    
        public virtual int GetChardIdInfo(Nullable<int> idReport, string idFileName, ObjectParameter idChartOut)
        {
            var idReportParameter = idReport.HasValue ?
                new ObjectParameter("IdReport", idReport) :
                new ObjectParameter("IdReport", typeof(int));
    
            var idFileNameParameter = idFileName != null ?
                new ObjectParameter("IdFileName", idFileName) :
                new ObjectParameter("IdFileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetChardIdInfo", idReportParameter, idFileNameParameter, idChartOut);
        }
    
        public virtual ObjectResult<GetChartInfo_Result> GetChartInfo(string filename, Nullable<int> colamount)
        {
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var colamountParameter = colamount.HasValue ?
                new ObjectParameter("colamount", colamount) :
                new ObjectParameter("colamount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChartInfo_Result>("GetChartInfo", filenameParameter, colamountParameter);
        }
    
        public virtual ObjectResult<spGetChartData_AudienceStream_Result> spGetChartData_AudienceStream(Nullable<int> param1IdSmartChart)
        {
            var param1IdSmartChartParameter = param1IdSmartChart.HasValue ?
                new ObjectParameter("Param1IdSmartChart", param1IdSmartChart) :
                new ObjectParameter("Param1IdSmartChart", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetChartData_AudienceStream_Result>("spGetChartData_AudienceStream", param1IdSmartChartParameter);
        }
    
        public virtual ObjectResult<spGetChartData_ParentTopicXTopicXWeight_Result> spGetChartData_ParentTopicXTopicXWeight(Nullable<int> param1IdSmartChart)
        {
            var param1IdSmartChartParameter = param1IdSmartChart.HasValue ?
                new ObjectParameter("Param1IdSmartChart", param1IdSmartChart) :
                new ObjectParameter("Param1IdSmartChart", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetChartData_ParentTopicXTopicXWeight_Result>("spGetChartData_ParentTopicXTopicXWeight", param1IdSmartChartParameter);
        }
    
        public virtual ObjectResult<spGetChartData_SocialPostXID_Result> spGetChartData_SocialPostXID(Nullable<int> param1IdSmartReport)
        {
            var param1IdSmartReportParameter = param1IdSmartReport.HasValue ?
                new ObjectParameter("Param1IdSmartReport", param1IdSmartReport) :
                new ObjectParameter("Param1IdSmartReport", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetChartData_SocialPostXID_Result>("spGetChartData_SocialPostXID", param1IdSmartReportParameter);
        }
    
        public virtual int spGetChartData_SocialPostXIdXCol(Nullable<int> param1IdSmartReport, string param2ColName, string param3ColValue)
        {
            var param1IdSmartReportParameter = param1IdSmartReport.HasValue ?
                new ObjectParameter("Param1IdSmartReport", param1IdSmartReport) :
                new ObjectParameter("Param1IdSmartReport", typeof(int));
    
            var param2ColNameParameter = param2ColName != null ?
                new ObjectParameter("Param2ColName", param2ColName) :
                new ObjectParameter("Param2ColName", typeof(string));
    
            var param3ColValueParameter = param3ColValue != null ?
                new ObjectParameter("Param3ColValue", param3ColValue) :
                new ObjectParameter("Param3ColValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetChartData_SocialPostXIdXCol", param1IdSmartReportParameter, param2ColNameParameter, param3ColValueParameter);
        }
    
        public virtual int spGetChartData_SocialPostXIdXTopNXFilter(Nullable<int> param1IdSmartReport, Nullable<int> param2TopN, string param3Filter)
        {
            var param1IdSmartReportParameter = param1IdSmartReport.HasValue ?
                new ObjectParameter("Param1IdSmartReport", param1IdSmartReport) :
                new ObjectParameter("Param1IdSmartReport", typeof(int));
    
            var param2TopNParameter = param2TopN.HasValue ?
                new ObjectParameter("Param2TopN", param2TopN) :
                new ObjectParameter("Param2TopN", typeof(int));
    
            var param3FilterParameter = param3Filter != null ?
                new ObjectParameter("Param3Filter", param3Filter) :
                new ObjectParameter("Param3Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetChartData_SocialPostXIdXTopNXFilter", param1IdSmartReportParameter, param2TopNParameter, param3FilterParameter);
        }
    
        public virtual int spGetChartData_SocialPostXIdXTopNXFilterXSkipRows(Nullable<int> param1IdSmartReport, Nullable<int> param2TopN, string param3Filter, Nullable<int> param4SkipRows)
        {
            var param1IdSmartReportParameter = param1IdSmartReport.HasValue ?
                new ObjectParameter("Param1IdSmartReport", param1IdSmartReport) :
                new ObjectParameter("Param1IdSmartReport", typeof(int));
    
            var param2TopNParameter = param2TopN.HasValue ?
                new ObjectParameter("Param2TopN", param2TopN) :
                new ObjectParameter("Param2TopN", typeof(int));
    
            var param3FilterParameter = param3Filter != null ?
                new ObjectParameter("Param3Filter", param3Filter) :
                new ObjectParameter("Param3Filter", typeof(string));
    
            var param4SkipRowsParameter = param4SkipRows.HasValue ?
                new ObjectParameter("Param4SkipRows", param4SkipRows) :
                new ObjectParameter("Param4SkipRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetChartData_SocialPostXIdXTopNXFilterXSkipRows", param1IdSmartReportParameter, param2TopNParameter, param3FilterParameter, param4SkipRowsParameter);
        }
    
        public virtual ObjectResult<spGetChartData_TermXCount_Result> spGetChartData_TermXCount(Nullable<int> param1IdSmartChart)
        {
            var param1IdSmartChartParameter = param1IdSmartChart.HasValue ?
                new ObjectParameter("Param1IdSmartChart", param1IdSmartChart) :
                new ObjectParameter("Param1IdSmartChart", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetChartData_TermXCount_Result>("spGetChartData_TermXCount", param1IdSmartChartParameter);
        }
    
        public virtual ObjectResult<spGetChartData_TermXGroupedTermXCount_Result> spGetChartData_TermXGroupedTermXCount(Nullable<int> param1IdSmartChart)
        {
            var param1IdSmartChartParameter = param1IdSmartChart.HasValue ?
                new ObjectParameter("Param1IdSmartChart", param1IdSmartChart) :
                new ObjectParameter("Param1IdSmartChart", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetChartData_TermXGroupedTermXCount_Result>("spGetChartData_TermXGroupedTermXCount", param1IdSmartChartParameter);
        }
    
        public virtual ObjectResult<spGetChartData_TermXTimeXCount_Result> spGetChartData_TermXTimeXCount(Nullable<int> param1IdSmartChart)
        {
            var param1IdSmartChartParameter = param1IdSmartChart.HasValue ?
                new ObjectParameter("Param1IdSmartChart", param1IdSmartChart) :
                new ObjectParameter("Param1IdSmartChart", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetChartData_TermXTimeXCount_Result>("spGetChartData_TermXTimeXCount", param1IdSmartChartParameter);
        }
    
        public virtual ObjectResult<spGetChartsByReportXID_Result> spGetChartsByReportXID(Nullable<int> param1IdSmartReport)
        {
            var param1IdSmartReportParameter = param1IdSmartReport.HasValue ?
                new ObjectParameter("Param1IdSmartReport", param1IdSmartReport) :
                new ObjectParameter("Param1IdSmartReport", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetChartsByReportXID_Result>("spGetChartsByReportXID", param1IdSmartReportParameter);
        }
    
        public virtual int spGetChartsByReportXIdXCol(Nullable<int> param1IdSmartReport, string param2ColName, string param3ColValue)
        {
            var param1IdSmartReportParameter = param1IdSmartReport.HasValue ?
                new ObjectParameter("Param1IdSmartReport", param1IdSmartReport) :
                new ObjectParameter("Param1IdSmartReport", typeof(int));
    
            var param2ColNameParameter = param2ColName != null ?
                new ObjectParameter("Param2ColName", param2ColName) :
                new ObjectParameter("Param2ColName", typeof(string));
    
            var param3ColValueParameter = param3ColValue != null ?
                new ObjectParameter("Param3ColValue", param3ColValue) :
                new ObjectParameter("Param3ColValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetChartsByReportXIdXCol", param1IdSmartReportParameter, param2ColNameParameter, param3ColValueParameter);
        }
    
        public virtual ObjectResult<spGetDeliveryReports_Result> spGetDeliveryReports(Nullable<int> paramDeliveryId)
        {
            var paramDeliveryIdParameter = paramDeliveryId.HasValue ?
                new ObjectParameter("ParamDeliveryId", paramDeliveryId) :
                new ObjectParameter("ParamDeliveryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetDeliveryReports_Result>("spGetDeliveryReports", paramDeliveryIdParameter);
        }
    
        public virtual ObjectResult<spGetReportDataXID_Result> spGetReportDataXID(Nullable<int> param1IdSmartReport)
        {
            var param1IdSmartReportParameter = param1IdSmartReport.HasValue ?
                new ObjectParameter("Param1IdSmartReport", param1IdSmartReport) :
                new ObjectParameter("Param1IdSmartReport", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetReportDataXID_Result>("spGetReportDataXID", param1IdSmartReportParameter);
        }
    
        public virtual int spGetReportDataXIdXCol(Nullable<int> param1IdSmartReport, string param2ColName, string param3ColValue)
        {
            var param1IdSmartReportParameter = param1IdSmartReport.HasValue ?
                new ObjectParameter("Param1IdSmartReport", param1IdSmartReport) :
                new ObjectParameter("Param1IdSmartReport", typeof(int));
    
            var param2ColNameParameter = param2ColName != null ?
                new ObjectParameter("Param2ColName", param2ColName) :
                new ObjectParameter("Param2ColName", typeof(string));
    
            var param3ColValueParameter = param3ColValue != null ?
                new ObjectParameter("Param3ColValue", param3ColValue) :
                new ObjectParameter("Param3ColValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetReportDataXIdXCol", param1IdSmartReportParameter, param2ColNameParameter, param3ColValueParameter);
        }
    
        public virtual ObjectResult<spGetSocialPosts_Result> spGetSocialPosts(Nullable<int> paramIdSmartReport, string paramMessage, Nullable<System.DateTime> paramMessageCreatedDate, string paramSocialNetwork, Nullable<int> paramTopRows)
        {
            var paramIdSmartReportParameter = paramIdSmartReport.HasValue ?
                new ObjectParameter("ParamIdSmartReport", paramIdSmartReport) :
                new ObjectParameter("ParamIdSmartReport", typeof(int));
    
            var paramMessageParameter = paramMessage != null ?
                new ObjectParameter("ParamMessage", paramMessage) :
                new ObjectParameter("ParamMessage", typeof(string));
    
            var paramMessageCreatedDateParameter = paramMessageCreatedDate.HasValue ?
                new ObjectParameter("ParamMessageCreatedDate", paramMessageCreatedDate) :
                new ObjectParameter("ParamMessageCreatedDate", typeof(System.DateTime));
    
            var paramSocialNetworkParameter = paramSocialNetwork != null ?
                new ObjectParameter("ParamSocialNetwork", paramSocialNetwork) :
                new ObjectParameter("ParamSocialNetwork", typeof(string));
    
            var paramTopRowsParameter = paramTopRows.HasValue ?
                new ObjectParameter("ParamTopRows", paramTopRows) :
                new ObjectParameter("ParamTopRows", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSocialPosts_Result>("spGetSocialPosts", paramIdSmartReportParameter, paramMessageParameter, paramMessageCreatedDateParameter, paramSocialNetworkParameter, paramTopRowsParameter);
        }
    
        public virtual ObjectResult<spGetSubscriptionDeliveries_Result> spGetSubscriptionDeliveries(Nullable<int> paramSubscriptionId)
        {
            var paramSubscriptionIdParameter = paramSubscriptionId.HasValue ?
                new ObjectParameter("ParamSubscriptionId", paramSubscriptionId) :
                new ObjectParameter("ParamSubscriptionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSubscriptionDeliveries_Result>("spGetSubscriptionDeliveries", paramSubscriptionIdParameter);
        }
    
        public virtual ObjectResult<spGetUserSubscriptions_Result> spGetUserSubscriptions(string paramUserId)
        {
            var paramUserIdParameter = paramUserId != null ?
                new ObjectParameter("ParamUserId", paramUserId) :
                new ObjectParameter("ParamUserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUserSubscriptions_Result>("spGetUserSubscriptions", paramUserIdParameter);
        }
    
        public virtual int UpdateSocialPostFormattedCols(Nullable<int> idReport)
        {
            var idReportParameter = idReport.HasValue ?
                new ObjectParameter("IdReport", idReport) :
                new ObjectParameter("IdReport", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSocialPostFormattedCols", idReportParameter);
        }
    }
}
