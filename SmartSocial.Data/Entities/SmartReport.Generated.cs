#pragma warning disable 1591
#pragma warning disable 0414        
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;

namespace SmartSocial.Data
{
    /// <summary>
    /// The class representing the dbo.SmartReport table.
    /// </summary>
    [System.Data.Linq.Mapping.Table(Name="dbo.SmartReport")]
    [System.Runtime.Serialization.DataContract(IsReference = true)]
    [System.ComponentModel.DataAnnotations.ScaffoldTable(true)]
    [System.ComponentModel.DataAnnotations.MetadataType(typeof(SmartSocial.Data.SmartReport.Metadata))]
    [System.Data.Services.Common.DataServiceKey("IdSmartReport")]
    [System.Diagnostics.DebuggerDisplay("IdSmartReport: {IdSmartReport}")]
    public partial class SmartReport
        : LinqEntityBase, ICloneable 
    {
        #region Static Constructor
        /// <summary>
        /// Initializes the <see cref="SmartReport"/> class.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        static SmartReport()
        {
            AddSharedRules();
        }
        #endregion

        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="SmartReport"/> class.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public SmartReport()
        {
            Initialize();
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void Initialize()
        {
            _serviceDelivery = default(System.Data.Linq.EntityRef<ServiceDelivery>);
            _smartChartList = new System.Data.Linq.EntitySet<SmartChart>(OnSmartChartListAdd, OnSmartChartListRemove);
            _socialPostList = new System.Data.Linq.EntitySet<SocialPost>(OnSocialPostListAdd, OnSocialPostListRemove);
            _sharedReportsList = new System.Data.Linq.EntitySet<SharedReports>(OnSharedReportsListAdd, OnSharedReportsListRemove);
            OnCreated();
        }
        #endregion

        #region Column Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private int _idSmartReport = default(int);

        /// <summary>
        /// Gets the idSmartReport column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "idSmartReport", Storage = "_idSmartReport", DbType = "int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true, CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 1)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int IdSmartReport
        {
            get { return _idSmartReport; }
            set
            {
                if (_idSmartReport != value)
                {
                    OnIdSmartReportChanging(value);
                    SendPropertyChanging("IdSmartReport");
                    _idSmartReport = value;
                    SendPropertyChanged("IdSmartReport");
                    OnIdSmartReportChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private Nullable<int> _idServiceDelivery;

        /// <summary>
        /// Gets or sets the idServiceDelivery column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "idServiceDelivery", Storage = "_idServiceDelivery", DbType = "int")]
        [System.Runtime.Serialization.DataMember(Order = 2)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public Nullable<int> IdServiceDelivery
        {
            get { return _idServiceDelivery; }
            set
            {
                if (_idServiceDelivery != value)
                {
                    if (_serviceDelivery.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnIdServiceDeliveryChanging(value);
                    SendPropertyChanging("IdServiceDelivery");
                    _idServiceDelivery = value;
                    SendPropertyChanged("IdServiceDelivery");
                    OnIdServiceDeliveryChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private string _reportName;

        /// <summary>
        /// Gets or sets the ReportName column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "ReportName", Storage = "_reportName", DbType = "nvarchar(MAX)")]
        [System.Runtime.Serialization.DataMember(Order = 3)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public string ReportName
        {
            get { return _reportName; }
            set
            {
                if (_reportName != value)
                {
                    OnReportNameChanging(value);
                    SendPropertyChanging("ReportName");
                    _reportName = value;
                    SendPropertyChanged("ReportName");
                    OnReportNameChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private string _insights;

        /// <summary>
        /// Gets or sets the Insights column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Insights", Storage = "_insights", DbType = "nvarchar(MAX)")]
        [System.Runtime.Serialization.DataMember(Order = 4)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public string Insights
        {
            get { return _insights; }
            set
            {
                if (_insights != value)
                {
                    OnInsightsChanging(value);
                    SendPropertyChanging("Insights");
                    _insights = value;
                    SendPropertyChanged("Insights");
                    OnInsightsChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private Nullable<System.DateTime> _dateCreated;

        /// <summary>
        /// Gets or sets the DateCreated column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "DateCreated", Storage = "_dateCreated", DbType = "datetime")]
        [System.Runtime.Serialization.DataMember(Order = 5)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public Nullable<System.DateTime> DateCreated
        {
            get { return _dateCreated; }
            set
            {
                if (_dateCreated != value)
                {
                    OnDateCreatedChanging(value);
                    SendPropertyChanging("DateCreated");
                    _dateCreated = value;
                    SendPropertyChanged("DateCreated");
                    OnDateCreatedChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private Nullable<bool> _isTemplate;

        /// <summary>
        /// Gets or sets the isTemplate column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "isTemplate", Storage = "_isTemplate", DbType = "bit")]
        [System.Runtime.Serialization.DataMember(Order = 6)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public Nullable<bool> IsTemplate
        {
            get { return _isTemplate; }
            set
            {
                if (_isTemplate != value)
                {
                    OnIsTemplateChanging(value);
                    SendPropertyChanging("IsTemplate");
                    _isTemplate = value;
                    SendPropertyChanged("IsTemplate");
                    OnIsTemplateChanged();
                }
            }
        }
        #endregion

        #region Association Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Data.Linq.EntityRef<ServiceDelivery> _serviceDelivery;

        /// <summary>
        /// Gets or sets the <see cref="ServiceDelivery"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "ServiceDelivery_SmartReport", Storage = "_serviceDelivery", ThisKey = "IdServiceDelivery", OtherKey = "IdServiceDelivery", IsForeignKey = true, DeleteRule = "CASCADE")]
        [System.Runtime.Serialization.DataMember(Order = 7, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public ServiceDelivery ServiceDelivery
        {
            get { return (serializing && !_serviceDelivery.HasLoadedOrAssignedValue) ? null : _serviceDelivery.Entity; }
            set
            {
                ServiceDelivery previousValue = _serviceDelivery.Entity;
                if (previousValue != value || _serviceDelivery.HasLoadedOrAssignedValue == false)
                {
                    OnServiceDeliveryChanging(value);
                    SendPropertyChanging("ServiceDelivery");
                    if (previousValue != null)
                    {
                        _serviceDelivery.Entity = null;
                        previousValue.SmartReportList.Remove(this);
                    }
                    _serviceDelivery.Entity = value;
                    if (value != null)
                    {
                        value.SmartReportList.Add(this);
                        _idServiceDelivery = value.IdServiceDelivery;
                    }
                    else
                    {
                        _idServiceDelivery = default(Nullable<int>);
                    }
                    SendPropertyChanged("ServiceDelivery");
                    OnServiceDeliveryChanged();
                }
            }
        }
        
        
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Data.Linq.EntitySet<SmartChart> _smartChartList;

        /// <summary>
        /// Gets or sets the <see cref="SmartChart"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "SmartReport_SmartChart", Storage = "_smartChartList", ThisKey = "IdSmartReport", OtherKey = "IdSmartReport")]
        [System.Runtime.Serialization.DataMember(Order=8, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.EntitySet<SmartChart> SmartChartList
        {
            get { return (serializing && !_smartChartList.HasLoadedOrAssignedValues) ? null : _smartChartList; }
            set { _smartChartList.Assign(value); }
        }
        
        

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnSmartChartListAdd(SmartChart entity)
        {
            SendPropertyChanging(null);
            entity.SmartReport = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnSmartChartListRemove(SmartChart entity)
        {
            SendPropertyChanging(null);
            entity.SmartReport = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Data.Linq.EntitySet<SocialPost> _socialPostList;

        /// <summary>
        /// Gets or sets the <see cref="SocialPost"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "SmartReport_SocialPost", Storage = "_socialPostList", ThisKey = "IdSmartReport", OtherKey = "IdSmartReport")]
        [System.Runtime.Serialization.DataMember(Order=9, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.EntitySet<SocialPost> SocialPostList
        {
            get { return (serializing && !_socialPostList.HasLoadedOrAssignedValues) ? null : _socialPostList; }
            set { _socialPostList.Assign(value); }
        }
        
        

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnSocialPostListAdd(SocialPost entity)
        {
            SendPropertyChanging(null);
            entity.SmartReport = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnSocialPostListRemove(SocialPost entity)
        {
            SendPropertyChanging(null);
            entity.SmartReport = null;
            SendPropertyChanged(null);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Data.Linq.EntitySet<SharedReports> _sharedReportsList;

        /// <summary>
        /// Gets or sets the <see cref="SharedReports"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "SmartReport_SharedReports", Storage = "_sharedReportsList", ThisKey = "IdSmartReport", OtherKey = "SmartReportId")]
        [System.Runtime.Serialization.DataMember(Order=10, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.EntitySet<SharedReports> SharedReportsList
        {
            get { return (serializing && !_sharedReportsList.HasLoadedOrAssignedValues) ? null : _sharedReportsList; }
            set { _sharedReportsList.Assign(value); }
        }
        
        

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnSharedReportsListAdd(SharedReports entity)
        {
            SendPropertyChanging(null);
            entity.SmartReport = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnSharedReportsListRemove(SharedReports entity)
        {
            SendPropertyChanging(null);
            entity.SmartReport = null;
            SendPropertyChanged(null);
        }
        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called by the static constructor to add shared rules.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        static partial void AddSharedRules();
        /// <summary>Called when this instance is loaded.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnCreated();
        /// <summary>Called when <see cref="IdSmartReport"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnIdSmartReportChanging(int value);
        /// <summary>Called after <see cref="IdSmartReport"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnIdSmartReportChanged();
        /// <summary>Called when <see cref="IdServiceDelivery"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnIdServiceDeliveryChanging(Nullable<int> value);
        /// <summary>Called after <see cref="IdServiceDelivery"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnIdServiceDeliveryChanged();
        /// <summary>Called when <see cref="ReportName"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnReportNameChanging(string value);
        /// <summary>Called after <see cref="ReportName"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnReportNameChanged();
        /// <summary>Called when <see cref="Insights"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnInsightsChanging(string value);
        /// <summary>Called after <see cref="Insights"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnInsightsChanged();
        /// <summary>Called when <see cref="DateCreated"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDateCreatedChanging(Nullable<System.DateTime> value);
        /// <summary>Called after <see cref="DateCreated"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDateCreatedChanged();
        /// <summary>Called when <see cref="IsTemplate"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnIsTemplateChanging(Nullable<bool> value);
        /// <summary>Called after <see cref="IsTemplate"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnIsTemplateChanged();
        /// <summary>Called when <see cref="ServiceDelivery"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnServiceDeliveryChanging(ServiceDelivery value);
        /// <summary>Called after <see cref="ServiceDelivery"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnServiceDeliveryChanged();

        #endregion

        #region Serialization
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private bool serializing;

        /// <summary>
        /// Called when serializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public void OnSerializing(System.Runtime.Serialization.StreamingContext context) {
            serializing = true;
        }

        /// <summary>
        /// Called when serialized.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerialized]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public void OnSerialized(System.Runtime.Serialization.StreamingContext context) {
            serializing = false;
        }

        /// <summary>
        /// Called when deserializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnDeserializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public void OnDeserializing(System.Runtime.Serialization.StreamingContext context) {
            Initialize();
        }

        /// <summary>
        /// Deserializes an instance of <see cref="SmartReport"/> from XML.
        /// </summary>
        /// <param name="xml">The XML string representing a <see cref="SmartReport"/> instance.</param>
        /// <returns>An instance of <see cref="SmartReport"/> that is deserialized from the XML string.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public static SmartReport FromXml(string xml)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(SmartReport));

            using (var sr = new System.IO.StringReader(xml))
            using (var reader = System.Xml.XmlReader.Create(sr))
            {
                return deserializer.ReadObject(reader) as SmartReport;
            }
        }

        /// <summary>
        /// Deserializes an instance of <see cref="SmartReport"/> from a byte array.
        /// </summary>
        /// <param name="buffer">The byte array representing a <see cref="SmartReport"/> instance.</param>
        /// <returns>An instance of <see cref="SmartReport"/> that is deserialized from the byte array.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public static SmartReport FromBinary(byte[] buffer)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(SmartReport));

            using (var ms = new System.IO.MemoryStream(buffer))
            using (var reader = System.Xml.XmlDictionaryReader.CreateBinaryReader(ms, System.Xml.XmlDictionaryReaderQuotas.Max))
            {
                return deserializer.ReadObject(reader) as SmartReport;
            }
        }
        
        #endregion

        #region Clone
        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        object ICloneable.Clone()
        {
            var serializer = new System.Runtime.Serialization.DataContractSerializer(GetType());
            using (var ms = new System.IO.MemoryStream())
            {
                serializer.WriteObject(ms, this);
                ms.Position = 0;
                return serializer.ReadObject(ms);
            }
        }

        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        /// <remarks>
        /// Only loaded <see cref="T:System.Data.Linq.EntityRef`1"/> and <see cref="T:System.Data.Linq.EntitySet`1" /> child accessions will be cloned.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public SmartReport Clone()
        {
            return (SmartReport)((ICloneable)this).Clone();
        }
        #endregion

        #region Detach Methods
        /// <summary>
        /// Detach this instance from the <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        /// <remarks>
        /// Detaching the entity will stop all lazy loading and allow it to be added to another <see cref="System.Data.Linq.DataContext"/>.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public override void Detach()
        {
            if (!IsAttached())
                return;

            base.Detach();
            _serviceDelivery = Detach(_serviceDelivery);
            _smartChartList = Detach(_smartChartList, OnSmartChartListAdd, OnSmartChartListRemove);
            _socialPostList = Detach(_socialPostList, OnSocialPostListAdd, OnSocialPostListRemove);
            _sharedReportsList = Detach(_sharedReportsList, OnSharedReportsListAdd, OnSharedReportsListRemove);
        }
        #endregion
    }
}
#pragma warning restore 1591
#pragma warning restore 0414
