//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace SmartSocialServices.DataTransferObjects
{
    
    [DataContract(Name = "SharedReportDto", Namespace = "http://www.SmartSocial.com/dto/" , IsReference = true) ]
    public partial class SharedReportDto
    {
         #region Primitive Properties
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual int IdSharedReports
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual int CreatedBy
        {
     
    		
            get { return _createdBy; }
            set
            {
                if (_createdBy != value)
                {
                    if (UserProfile != null && UserProfile.UserId != value)
                    {
                        UserProfile = null;
                    }
                    _createdBy = value;
                }
            }
        }
        private int _createdBy;
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual int SmartReportId
        {
     
    		
            get { return _smartReportId; }
            set
            {
                if (_smartReportId != value)
                {
                    if (SmartReport != null && SmartReport.idSmartReport != value)
                    {
                        SmartReport = null;
                    }
                    _smartReportId = value;
                }
            }
        }
        private int _smartReportId;
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual Nullable<int> SharedWith
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string URL
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string TinyUrl
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Comments
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Token
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual System.DateTime CreatedDate
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual System.DateTime ExpiredDate
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual bool IsActive
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
    	[DataMember(EmitDefaultValue = false)]
        public virtual SmartReportDto SmartReport
        {
            get { return _smartReport; }
            set
            {
                if (!ReferenceEquals(_smartReport, value))
                {
                    var previousValue = _smartReport;
                    _smartReport = value;
                    FixupSmartReport(previousValue);
                }
            }
        }
        private SmartReportDto _smartReport;
    
    	[DataMember(EmitDefaultValue = false)]
        public virtual UserProfileDto UserProfile
        {
            get { return _userProfile; }
            set
            {
                if (!ReferenceEquals(_userProfile, value))
                {
                    var previousValue = _userProfile;
                    _userProfile = value;
                    FixupUserProfile(previousValue);
                }
            }
        }
        private UserProfileDto _userProfile;

        #endregion

        #region Association Fixup
    
        private void FixupSmartReport(SmartReportDto previousValue)
        {
            if (previousValue != null && previousValue.SharedReports.Contains(this))
            {
                previousValue.SharedReports.Remove(this);
            }
    
            if (SmartReport != null)
            {
                if (!SmartReport.SharedReports.Contains(this))
                {
                    SmartReport.SharedReports.Add(this);
                }
                if (SmartReportId != SmartReport.idSmartReport)
                {
                    SmartReportId = SmartReport.idSmartReport;
                }
            }
        }
    
        private void FixupUserProfile(UserProfileDto previousValue)
        {
            if (previousValue != null && previousValue.SharedReports.Contains(this))
            {
                previousValue.SharedReports.Remove(this);
            }
    
            if (UserProfile != null)
            {
                if (!UserProfile.SharedReports.Contains(this))
                {
                    UserProfile.SharedReports.Add(this);
                }
                if (CreatedBy != UserProfile.UserId)
                {
                    CreatedBy = UserProfile.UserId;
                }
            }
        }

        #endregion

    }
}
