#pragma warning disable 1591
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

using System;

namespace SmartSocial.Data
{
    /// <summary>
    /// The <see cref="System.Data.Linq.DataContext"/> class for the SmartSocial_QA database.
    /// </summary>
    public partial class SmartSocialdbDataContext
        : CodeSmith.Data.Linq.DataContextBase, System.Data.Services.IUpdatable
    {
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public static readonly System.Data.Linq.Mapping.MappingSource MappingCache = new System.Data.Linq.Mapping.AttributeMappingSource();

        #region ConnectionString
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private const string CONNECTION_NAME = "EspriellaSmartSocialConnectionString";
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private static volatile string _connectionString;
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private static object _connectionLock = new Object();

        /// <summary>The application connection string read from web.config or app.config</summary>
        /// <example>
        /// Add the following key to the "connectionStrings" section of your config:
        /// <code><![CDATA[
        /// <configuration>
        ///     <connectionStrings>
        ///         <add name="EspriellaSmartSocialConnectionString"
        ///             connectionString="Data Source=(local);Initial Catalog=DATABASE;Integrated Security=True"
        ///             providerName="System.Data.SqlClient" />
        ///     </connectionStrings>
        /// </configuration>
        /// ]]></code>
        /// </example>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public static string ConnectionString
        {
            get
            {
                if (_connectionString == null)
                {
                    lock (_connectionLock)
                    {
                        if (_connectionString == null)
                            _connectionString = GetDefaultConnectionString();
                    }
                }
                return _connectionString;
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private static string GetDefaultConnectionString()
        {
            var settings = System.Configuration.ConfigurationManager.ConnectionStrings[CONNECTION_NAME];
            if (settings == null)
            {
                string message = string.Format("Could not find the connection string '{0}' in the configuration file.  " +
                       "Please add an entry to connectionStrings section named '{0}'.", CONNECTION_NAME);
                throw new System.Configuration.ConfigurationErrorsException(message);
            }
            return settings.ConnectionString;
        }
        #endregion

        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="SmartSocialdbDataContext"/> class.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public SmartSocialdbDataContext()
            : base(ConnectionString, MappingCache)
        {
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SmartSocialdbDataContext"/> class.
        /// </summary>
        /// <param name="connection">The connection string.</param>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public SmartSocialdbDataContext(string connection)
            : base(connection, MappingCache)
        {
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SmartSocialdbDataContext"/> class.
        /// </summary>
        /// <param name="connection">The database connection.</param>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public SmartSocialdbDataContext(System.Data.IDbConnection connection)
            : base(connection, MappingCache)
        {
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SmartSocialdbDataContext"/> class.
        /// </summary>
        /// <param name="connection">The connection string.</param>
        /// <param name="mappingSource">The mapping source.</param>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public SmartSocialdbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource)
            : base(connection, mappingSource)
        {
            OnCreated();
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SmartSocialdbDataContext"/> class.
        /// </summary>
        /// <param name="connection">The database connection.</param>
        /// <param name="mappingSource">The mapping source.</param>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public SmartSocialdbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource)
            : base(connection, mappingSource)
        {
            OnCreated();
        }
        #endregion

        #region Tables
        /// <summary>Represents the dbo.AspNetRoles table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.AspNetRoles> AspNetRoles
        {
            get { return GetTable<SmartSocial.Data.AspNetRoles>(); }
        }

        /// <summary>Represents the dbo.AspNetUserClaims table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.AspNetUserClaims> AspNetUserClaims
        {
            get { return GetTable<SmartSocial.Data.AspNetUserClaims>(); }
        }

        /// <summary>Represents the dbo.AspNetUserLogins table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.AspNetUserLogins> AspNetUserLogins
        {
            get { return GetTable<SmartSocial.Data.AspNetUserLogins>(); }
        }

        /// <summary>Represents the dbo.AspNetUserRoles table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.AspNetUserRoles> AspNetUserRoles
        {
            get { return GetTable<SmartSocial.Data.AspNetUserRoles>(); }
        }

        /// <summary>Represents the dbo.AspNetUsers table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.AspNetUsers> AspNetUsers
        {
            get { return GetTable<SmartSocial.Data.AspNetUsers>(); }
        }

        /// <summary>Represents the dbo.ChartComment table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.ChartComment> ChartComment
        {
            get { return GetTable<SmartSocial.Data.ChartComment>(); }
        }

        /// <summary>Represents the dbo.ChartSeries table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.ChartSeries> ChartSeries
        {
            get { return GetTable<SmartSocial.Data.ChartSeries>(); }
        }

        /// <summary>Represents the dbo.ChartType table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.ChartType> ChartType
        {
            get { return GetTable<SmartSocial.Data.ChartType>(); }
        }

        /// <summary>Represents the dbo.Company table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.Company> Company
        {
            get { return GetTable<SmartSocial.Data.Company>(); }
        }

        /// <summary>Represents the dbo.Country table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.Country> Country
        {
            get { return GetTable<SmartSocial.Data.Country>(); }
        }

        /// <summary>Represents the dbo.DataProvider table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.DataProvider> DataProvider
        {
            get { return GetTable<SmartSocial.Data.DataProvider>(); }
        }

        /// <summary>Represents the dbo.DataProviderXChartType table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.DataProviderXChartType> DataProviderXChartType
        {
            get { return GetTable<SmartSocial.Data.DataProviderXChartType>(); }
        }

        /// <summary>Represents the dbo.DataType table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.DataType> DataType
        {
            get { return GetTable<SmartSocial.Data.DataType>(); }
        }

        /// <summary>Represents the dbo.Leads table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.Leads> Leads
        {
            get { return GetTable<SmartSocial.Data.Leads>(); }
        }

        /// <summary>Represents the dbo.SeriesValue table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.SeriesValue> SeriesValue
        {
            get { return GetTable<SmartSocial.Data.SeriesValue>(); }
        }

        /// <summary>Represents the dbo.ServiceDelivery table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.ServiceDelivery> ServiceDelivery
        {
            get { return GetTable<SmartSocial.Data.ServiceDelivery>(); }
        }

        /// <summary>Represents the dbo.ServiceSubscription table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.ServiceSubscription> ServiceSubscription
        {
            get { return GetTable<SmartSocial.Data.ServiceSubscription>(); }
        }

        /// <summary>Represents the dbo.SharedReports table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.SharedReports> SharedReports
        {
            get { return GetTable<SmartSocial.Data.SharedReports>(); }
        }

        /// <summary>Represents the dbo.SmartChart table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.SmartChart> SmartChart
        {
            get { return GetTable<SmartSocial.Data.SmartChart>(); }
        }

        /// <summary>Represents the dbo.SmartReport table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.SmartReport> SmartReport
        {
            get { return GetTable<SmartSocial.Data.SmartReport>(); }
        }

        /// <summary>Represents the dbo.SocialPost table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.SocialPost> SocialPost
        {
            get { return GetTable<SmartSocial.Data.SocialPost>(); }
        }

        /// <summary>Represents the dbo.SocialPostTMP table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.SocialPostTMP> SocialPostTMP
        {
            get { return GetTable<SmartSocial.Data.SocialPostTMP>(); }
        }

        /// <summary>Represents the dbo.UserProfile table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.UserProfile> UserProfile
        {
            get { return GetTable<SmartSocial.Data.UserProfile>(); }
        }

        /// <summary>Represents the dbo.UsersXSubscription table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.UsersXSubscription> UsersXSubscription
        {
            get { return GetTable<SmartSocial.Data.UsersXSubscription>(); }
        }

        /// <summary>Represents the dbo.webpages_Membership table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.WebpagesMembership> WebpagesMembership
        {
            get { return GetTable<SmartSocial.Data.WebpagesMembership>(); }
        }

        /// <summary>Represents the dbo.webpages_OAuthMembership table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.WebpagesOAuthMembership> WebpagesOAuthMembership
        {
            get { return GetTable<SmartSocial.Data.WebpagesOAuthMembership>(); }
        }

        /// <summary>Represents the dbo.webpages_Roles table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.WebpagesRoles> WebpagesRoles
        {
            get { return GetTable<SmartSocial.Data.WebpagesRoles>(); }
        }

        /// <summary>Represents the dbo.webpages_UsersInRoles table in the underlying database.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.Table<SmartSocial.Data.WebpagesUsersInRoles> WebpagesUsersInRoles
        {
            get { return GetTable<SmartSocial.Data.WebpagesUsersInRoles>(); }
        }

        #endregion

        #region Functions
        /// <summary>Method that is mapped to the dbo.CreateChartFromTemplate database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.CreateChartFromTemplate")]
        [return: System.Data.Linq.Mapping.Parameter(DbType = "int")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int CreateChartFromTemplate(
            [System.Data.Linq.Mapping.Parameter(Name = "@IdReport", DbType = "int")] int? idReport,
            [System.Data.Linq.Mapping.Parameter(Name = "@NEWIdReport", DbType = "int")] int? nEWIdReport)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, idReport, nEWIdReport);

            return ((int)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.CreateReportFromTemplate database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.CreateReportFromTemplate")]
        [return: System.Data.Linq.Mapping.Parameter(DbType = "int")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int CreateReportFromTemplate(
            [System.Data.Linq.Mapping.Parameter(Name = "@IdReport", DbType = "int")] int? idReport,
            [System.Data.Linq.Mapping.Parameter(Name = "@idServiceDelivery", DbType = "int")] int? idServiceDelivery,
            [System.Data.Linq.Mapping.Parameter(Name = "@IdReportOut", DbType = "int")] ref int? idReportOut)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, idReport, idServiceDelivery, idReportOut);
            idReportOut = ((int?)(result.GetParameterValue(2)));

            return ((int)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.GetChardIdInfo database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.GetChardIdInfo")]
        [return: System.Data.Linq.Mapping.Parameter(DbType = "int")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int GetChardIdInfo(
            [System.Data.Linq.Mapping.Parameter(Name = "@IdReport", DbType = "int")] int? idReport,
            [System.Data.Linq.Mapping.Parameter(Name = "@IdFileName", DbType = "varchar(200)")] string idFileName,
            [System.Data.Linq.Mapping.Parameter(Name = "@IdChartOut", DbType = "int")] ref int? idChartOut)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, idReport, idFileName, idChartOut);
            idChartOut = ((int?)(result.GetParameterValue(2)));

            return ((int)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.GetChartInfo database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.GetChartInfo")]
        [System.Data.Linq.Mapping.ResultType(typeof(SmartSocial.Data.GetChartInfoResult1))]
        [System.Data.Linq.Mapping.ResultType(typeof(SmartSocial.Data.GetChartInfoResult2))]
        [System.Data.Linq.Mapping.ResultType(typeof(SmartSocial.Data.GetChartInfoResult3))]
        [System.Data.Linq.Mapping.ResultType(typeof(SmartSocial.Data.GetChartInfoResult4))]
        [System.Data.Linq.Mapping.ResultType(typeof(SmartSocial.Data.GetChartInfoResult5))]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.IMultipleResults GetChartInfo(
            [System.Data.Linq.Mapping.Parameter(Name = "@filename", DbType = "varchar(MAX)")] string filename,
            [System.Data.Linq.Mapping.Parameter(Name = "@colamount", DbType = "int")] int? colamount)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, filename, colamount);

            return ((System.Data.Linq.IMultipleResults)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartData_AudienceStream database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartData_AudienceStream")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataAudienceStreamResult> SpGetChartDataAudienceStream(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartChart", DbType = "int")] int? param1IdSmartChart)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartChart);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataAudienceStreamResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartData_ParentTopicXTopicXWeight database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartData_ParentTopicXTopicXWeight")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataParentTopicXTopicXWeightResult> SpGetChartDataParentTopicXTopicXWeight(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartChart", DbType = "int")] int? param1IdSmartChart)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartChart);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataParentTopicXTopicXWeightResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartData_SocialPostXID database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartData_SocialPostXID")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataSocialPostXIDResult> SpGetChartDataSocialPostXID(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartReport", DbType = "int")] int? param1IdSmartReport)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartReport);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataSocialPostXIDResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartData_SocialPostXIdXCol database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartData_SocialPostXIdXCol")]
        [return: System.Data.Linq.Mapping.Parameter(DbType = "int")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int SpGetChartDataSocialPostXIdXCol(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartReport", DbType = "int")] int? param1IdSmartReport,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param2ColName", DbType = "varchar(50)")] string param2ColName,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param3ColValue", DbType = "varchar(200)")] string param3ColValue)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartReport, param2ColName, param3ColValue);

            return ((int)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartData_SocialPostXIdXTopNXFilter database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartData_SocialPostXIdXTopNXFilter")]
        [return: System.Data.Linq.Mapping.Parameter(DbType = "int")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int SpGetChartDataSocialPostXIdXTopNXFilter(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartReport", DbType = "int")] int? param1IdSmartReport,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param2TopN", DbType = "int")] int? param2TopN,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param3Filter", DbType = "nvarchar(200)")] string param3Filter)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartReport, param2TopN, param3Filter);

            return ((int)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartData_SocialPostXIdXTopNXFilterXSkipRows database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartData_SocialPostXIdXTopNXFilterXSkipRows")]
        [return: System.Data.Linq.Mapping.Parameter(DbType = "int")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int SpGetChartDataSocialPostXIdXTopNXFilterXSkipRows(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartReport", DbType = "int")] int? param1IdSmartReport,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param2TopN", DbType = "int")] int? param2TopN,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param3Filter", DbType = "nvarchar(200)")] string param3Filter,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param4SkipRows", DbType = "int")] int? param4SkipRows)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartReport, param2TopN, param3Filter, param4SkipRows);

            return ((int)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartData_TermXCount database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartData_TermXCount")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataTermXCountResult> SpGetChartDataTermXCount(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartChart", DbType = "int")] int? param1IdSmartChart)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartChart);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataTermXCountResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartData_TermXGroupedTermXCount database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartData_TermXGroupedTermXCount")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataTermXGroupedTermXCountResult> SpGetChartDataTermXGroupedTermXCount(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartChart", DbType = "int")] int? param1IdSmartChart)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartChart);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataTermXGroupedTermXCountResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartData_TermXTimeXCount database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartData_TermXTimeXCount")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataTermXTimeXCountResult> SpGetChartDataTermXTimeXCount(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartChart", DbType = "int")] int? param1IdSmartChart)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartChart);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartDataTermXTimeXCountResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartsByReportXID database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartsByReportXID")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartsByReportXIDResult> SpGetChartsByReportXID(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartReport", DbType = "int")] int? param1IdSmartReport)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartReport);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetChartsByReportXIDResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetChartsByReportXIdXCol database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetChartsByReportXIdXCol")]
        [return: System.Data.Linq.Mapping.Parameter(DbType = "int")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int SpGetChartsByReportXIdXCol(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartReport", DbType = "int")] int? param1IdSmartReport,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param2ColName", DbType = "varchar(50)")] string param2ColName,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param3ColValue", DbType = "varchar(200)")] string param3ColValue)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartReport, param2ColName, param3ColValue);

            return ((int)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetDeliveryReports database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetDeliveryReports")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetDeliveryReportsResult> SpGetDeliveryReports(
            [System.Data.Linq.Mapping.Parameter(Name = "@ParamDeliveryId", DbType = "int")] int? paramDeliveryId)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, paramDeliveryId);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetDeliveryReportsResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetReportDataXID database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetReportDataXID")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetReportDataXIDResult> SpGetReportDataXID(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartReport", DbType = "int")] int? param1IdSmartReport)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartReport);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetReportDataXIDResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetReportDataXIdXCol database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetReportDataXIdXCol")]
        [return: System.Data.Linq.Mapping.Parameter(DbType = "int")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int SpGetReportDataXIdXCol(
            [System.Data.Linq.Mapping.Parameter(Name = "@Param1IdSmartReport", DbType = "int")] int? param1IdSmartReport,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param2ColName", DbType = "varchar(50)")] string param2ColName,
            [System.Data.Linq.Mapping.Parameter(Name = "@Param3ColValue", DbType = "varchar(200)")] string param3ColValue)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, param1IdSmartReport, param2ColName, param3ColValue);

            return ((int)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetSocialPosts database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetSocialPosts")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetSocialPostsResult> SpGetSocialPosts(
            [System.Data.Linq.Mapping.Parameter(Name = "@ParamIdSmartReport", DbType = "int")] int? paramIdSmartReport,
            [System.Data.Linq.Mapping.Parameter(Name = "@ParamMessage", DbType = "nvarchar(MAX)")] string paramMessage,
            [System.Data.Linq.Mapping.Parameter(Name = "@ParamMessageCreatedDate", DbType = "datetime")] System.DateTime? paramMessageCreatedDate,
            [System.Data.Linq.Mapping.Parameter(Name = "@ParamSocialNetwork", DbType = "nvarchar(MAX)")] string paramSocialNetwork,
            [System.Data.Linq.Mapping.Parameter(Name = "@ParamTopRows", DbType = "int")] int? paramTopRows)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, paramIdSmartReport, paramMessage, paramMessageCreatedDate, paramSocialNetwork, paramTopRows);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetSocialPostsResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetSubscriptionDeliveries database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetSubscriptionDeliveries")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetSubscriptionDeliveriesResult> SpGetSubscriptionDeliveries(
            [System.Data.Linq.Mapping.Parameter(Name = "@ParamSubscriptionId", DbType = "int")] int? paramSubscriptionId)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, paramSubscriptionId);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetSubscriptionDeliveriesResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.spGetUserSubscriptions database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.spGetUserSubscriptions")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetUserSubscriptionsResult> SpGetUserSubscriptions(
            [System.Data.Linq.Mapping.Parameter(Name = "@ParamUserId", DbType = "nvarchar(128)")] string paramUserId)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, paramUserId);

            return ((System.Data.Linq.ISingleResult<SmartSocial.Data.SpGetUserSubscriptionsResult>)(result.ReturnValue));
        }

        /// <summary>Method that is mapped to the dbo.UpdateSocialPostFormattedCols database procedure.</summary>
        /// <returns></returns>
        [System.Data.Linq.Mapping.Function(Name = "dbo.UpdateSocialPostFormattedCols")]
        [return: System.Data.Linq.Mapping.Parameter(DbType = "int")]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int UpdateSocialPostFormattedCols(
            [System.Data.Linq.Mapping.Parameter(Name = "@IdReport", DbType = "int")] int? idReport,
            [System.Data.Linq.Mapping.Parameter(Name = "@ProductName", DbType = "varchar(100)")] string productName)
        {
            var methodInfo = (System.Reflection.MethodInfo)System.Reflection.MethodInfo.GetCurrentMethod();
            var result = this.ExecuteMethodCall(this, methodInfo, idReport, productName);

            return ((int)(result.ReturnValue));
        }

        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called after this instance is created.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnCreated();

        /// <summary>Called before a <see cref="AspNetRoles"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertAspNetRoles(SmartSocial.Data.AspNetRoles instance);

        /// <summary>Called before a <see cref="AspNetRoles"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateAspNetRoles(SmartSocial.Data.AspNetRoles instance);

        /// <summary>Called before a <see cref="AspNetRoles"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteAspNetRoles(SmartSocial.Data.AspNetRoles instance);

        /// <summary>Called before a <see cref="AspNetUserClaims"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertAspNetUserClaims(SmartSocial.Data.AspNetUserClaims instance);

        /// <summary>Called before a <see cref="AspNetUserClaims"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateAspNetUserClaims(SmartSocial.Data.AspNetUserClaims instance);

        /// <summary>Called before a <see cref="AspNetUserClaims"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteAspNetUserClaims(SmartSocial.Data.AspNetUserClaims instance);

        /// <summary>Called before a <see cref="AspNetUserLogins"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertAspNetUserLogins(SmartSocial.Data.AspNetUserLogins instance);

        /// <summary>Called before a <see cref="AspNetUserLogins"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateAspNetUserLogins(SmartSocial.Data.AspNetUserLogins instance);

        /// <summary>Called before a <see cref="AspNetUserLogins"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteAspNetUserLogins(SmartSocial.Data.AspNetUserLogins instance);

        /// <summary>Called before a <see cref="AspNetUserRoles"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertAspNetUserRoles(SmartSocial.Data.AspNetUserRoles instance);

        /// <summary>Called before a <see cref="AspNetUserRoles"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateAspNetUserRoles(SmartSocial.Data.AspNetUserRoles instance);

        /// <summary>Called before a <see cref="AspNetUserRoles"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteAspNetUserRoles(SmartSocial.Data.AspNetUserRoles instance);

        /// <summary>Called before a <see cref="AspNetUsers"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertAspNetUsers(SmartSocial.Data.AspNetUsers instance);

        /// <summary>Called before a <see cref="AspNetUsers"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateAspNetUsers(SmartSocial.Data.AspNetUsers instance);

        /// <summary>Called before a <see cref="AspNetUsers"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteAspNetUsers(SmartSocial.Data.AspNetUsers instance);

        /// <summary>Called before a <see cref="ChartComment"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertChartComment(SmartSocial.Data.ChartComment instance);

        /// <summary>Called before a <see cref="ChartComment"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateChartComment(SmartSocial.Data.ChartComment instance);

        /// <summary>Called before a <see cref="ChartComment"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteChartComment(SmartSocial.Data.ChartComment instance);

        /// <summary>Called before a <see cref="ChartSeries"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertChartSeries(SmartSocial.Data.ChartSeries instance);

        /// <summary>Called before a <see cref="ChartSeries"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateChartSeries(SmartSocial.Data.ChartSeries instance);

        /// <summary>Called before a <see cref="ChartSeries"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteChartSeries(SmartSocial.Data.ChartSeries instance);

        /// <summary>Called before a <see cref="ChartType"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertChartType(SmartSocial.Data.ChartType instance);

        /// <summary>Called before a <see cref="ChartType"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateChartType(SmartSocial.Data.ChartType instance);

        /// <summary>Called before a <see cref="ChartType"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteChartType(SmartSocial.Data.ChartType instance);

        /// <summary>Called before a <see cref="Company"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertCompany(SmartSocial.Data.Company instance);

        /// <summary>Called before a <see cref="Company"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateCompany(SmartSocial.Data.Company instance);

        /// <summary>Called before a <see cref="Company"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteCompany(SmartSocial.Data.Company instance);

        /// <summary>Called before a <see cref="Country"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertCountry(SmartSocial.Data.Country instance);

        /// <summary>Called before a <see cref="Country"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateCountry(SmartSocial.Data.Country instance);

        /// <summary>Called before a <see cref="Country"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteCountry(SmartSocial.Data.Country instance);

        /// <summary>Called before a <see cref="DataProvider"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertDataProvider(SmartSocial.Data.DataProvider instance);

        /// <summary>Called before a <see cref="DataProvider"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateDataProvider(SmartSocial.Data.DataProvider instance);

        /// <summary>Called before a <see cref="DataProvider"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteDataProvider(SmartSocial.Data.DataProvider instance);

        /// <summary>Called before a <see cref="DataProviderXChartType"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertDataProviderXChartType(SmartSocial.Data.DataProviderXChartType instance);

        /// <summary>Called before a <see cref="DataProviderXChartType"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateDataProviderXChartType(SmartSocial.Data.DataProviderXChartType instance);

        /// <summary>Called before a <see cref="DataProviderXChartType"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteDataProviderXChartType(SmartSocial.Data.DataProviderXChartType instance);

        /// <summary>Called before a <see cref="DataType"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertDataType(SmartSocial.Data.DataType instance);

        /// <summary>Called before a <see cref="DataType"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateDataType(SmartSocial.Data.DataType instance);

        /// <summary>Called before a <see cref="DataType"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteDataType(SmartSocial.Data.DataType instance);

        /// <summary>Called before a <see cref="Leads"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertLeads(SmartSocial.Data.Leads instance);

        /// <summary>Called before a <see cref="Leads"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateLeads(SmartSocial.Data.Leads instance);

        /// <summary>Called before a <see cref="Leads"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteLeads(SmartSocial.Data.Leads instance);

        /// <summary>Called before a <see cref="SeriesValue"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertSeriesValue(SmartSocial.Data.SeriesValue instance);

        /// <summary>Called before a <see cref="SeriesValue"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateSeriesValue(SmartSocial.Data.SeriesValue instance);

        /// <summary>Called before a <see cref="SeriesValue"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteSeriesValue(SmartSocial.Data.SeriesValue instance);

        /// <summary>Called before a <see cref="ServiceDelivery"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertServiceDelivery(SmartSocial.Data.ServiceDelivery instance);

        /// <summary>Called before a <see cref="ServiceDelivery"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateServiceDelivery(SmartSocial.Data.ServiceDelivery instance);

        /// <summary>Called before a <see cref="ServiceDelivery"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteServiceDelivery(SmartSocial.Data.ServiceDelivery instance);

        /// <summary>Called before a <see cref="ServiceSubscription"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertServiceSubscription(SmartSocial.Data.ServiceSubscription instance);

        /// <summary>Called before a <see cref="ServiceSubscription"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateServiceSubscription(SmartSocial.Data.ServiceSubscription instance);

        /// <summary>Called before a <see cref="ServiceSubscription"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteServiceSubscription(SmartSocial.Data.ServiceSubscription instance);

        /// <summary>Called before a <see cref="SharedReports"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertSharedReports(SmartSocial.Data.SharedReports instance);

        /// <summary>Called before a <see cref="SharedReports"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateSharedReports(SmartSocial.Data.SharedReports instance);

        /// <summary>Called before a <see cref="SharedReports"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteSharedReports(SmartSocial.Data.SharedReports instance);

        /// <summary>Called before a <see cref="SmartChart"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertSmartChart(SmartSocial.Data.SmartChart instance);

        /// <summary>Called before a <see cref="SmartChart"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateSmartChart(SmartSocial.Data.SmartChart instance);

        /// <summary>Called before a <see cref="SmartChart"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteSmartChart(SmartSocial.Data.SmartChart instance);

        /// <summary>Called before a <see cref="SmartReport"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertSmartReport(SmartSocial.Data.SmartReport instance);

        /// <summary>Called before a <see cref="SmartReport"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateSmartReport(SmartSocial.Data.SmartReport instance);

        /// <summary>Called before a <see cref="SmartReport"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteSmartReport(SmartSocial.Data.SmartReport instance);

        /// <summary>Called before a <see cref="SocialPost"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertSocialPost(SmartSocial.Data.SocialPost instance);

        /// <summary>Called before a <see cref="SocialPost"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateSocialPost(SmartSocial.Data.SocialPost instance);

        /// <summary>Called before a <see cref="SocialPost"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteSocialPost(SmartSocial.Data.SocialPost instance);

        /// <summary>Called before a <see cref="SocialPostTMP"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertSocialPostTMP(SmartSocial.Data.SocialPostTMP instance);

        /// <summary>Called before a <see cref="SocialPostTMP"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateSocialPostTMP(SmartSocial.Data.SocialPostTMP instance);

        /// <summary>Called before a <see cref="SocialPostTMP"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteSocialPostTMP(SmartSocial.Data.SocialPostTMP instance);

        /// <summary>Called before a <see cref="UserProfile"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertUserProfile(SmartSocial.Data.UserProfile instance);

        /// <summary>Called before a <see cref="UserProfile"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateUserProfile(SmartSocial.Data.UserProfile instance);

        /// <summary>Called before a <see cref="UserProfile"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteUserProfile(SmartSocial.Data.UserProfile instance);

        /// <summary>Called before a <see cref="UsersXSubscription"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertUsersXSubscription(SmartSocial.Data.UsersXSubscription instance);

        /// <summary>Called before a <see cref="UsersXSubscription"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateUsersXSubscription(SmartSocial.Data.UsersXSubscription instance);

        /// <summary>Called before a <see cref="UsersXSubscription"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteUsersXSubscription(SmartSocial.Data.UsersXSubscription instance);

        /// <summary>Called before a <see cref="WebpagesMembership"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertWebpagesMembership(SmartSocial.Data.WebpagesMembership instance);

        /// <summary>Called before a <see cref="WebpagesMembership"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateWebpagesMembership(SmartSocial.Data.WebpagesMembership instance);

        /// <summary>Called before a <see cref="WebpagesMembership"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteWebpagesMembership(SmartSocial.Data.WebpagesMembership instance);

        /// <summary>Called before a <see cref="WebpagesOAuthMembership"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertWebpagesOAuthMembership(SmartSocial.Data.WebpagesOAuthMembership instance);

        /// <summary>Called before a <see cref="WebpagesOAuthMembership"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateWebpagesOAuthMembership(SmartSocial.Data.WebpagesOAuthMembership instance);

        /// <summary>Called before a <see cref="WebpagesOAuthMembership"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteWebpagesOAuthMembership(SmartSocial.Data.WebpagesOAuthMembership instance);

        /// <summary>Called before a <see cref="WebpagesRoles"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertWebpagesRoles(SmartSocial.Data.WebpagesRoles instance);

        /// <summary>Called before a <see cref="WebpagesRoles"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateWebpagesRoles(SmartSocial.Data.WebpagesRoles instance);

        /// <summary>Called before a <see cref="WebpagesRoles"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteWebpagesRoles(SmartSocial.Data.WebpagesRoles instance);

        /// <summary>Called before a <see cref="WebpagesUsersInRoles"/> is inserted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void InsertWebpagesUsersInRoles(SmartSocial.Data.WebpagesUsersInRoles instance);

        /// <summary>Called before a <see cref="WebpagesUsersInRoles"/> is updated.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void UpdateWebpagesUsersInRoles(SmartSocial.Data.WebpagesUsersInRoles instance);

        /// <summary>Called before a <see cref="WebpagesUsersInRoles"/> is deleted.</summary>
        /// <param name="instance">The instance.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void DeleteWebpagesUsersInRoles(SmartSocial.Data.WebpagesUsersInRoles instance);
        #endregion

        #region IUpdatable Members
        /// <summary>
        /// Adds the specified value to the collection.
        /// </summary>
        /// <param name="targetResource">Target object that defines the property.</param>
        /// <param name="propertyName">The name of the collection property to which the resource should be added..</param>
        /// <param name="resourceToBeAdded">The opaque object representing the resource to be added.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        void System.Data.Services.IUpdatable.AddReferenceToCollection(object targetResource, string propertyName, object resourceToBeAdded)
        {
            var t = targetResource.GetType();

            var collectionProperty = GetPropertyInfoForType(t, propertyName, false);
            var collection = collectionProperty.GetValue(targetResource, null) as System.Collections.IList;
            if (collection == null)
                return; // throw error

            collection.Add(resourceToBeAdded);
        }

        /// <summary>
        /// Cancels a change to the data.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        void System.Data.Services.IUpdatable.ClearChanges()
        {
            var mi = GetType().GetMethod("ClearCache",
                System.Reflection.BindingFlags.Instance |
                System.Reflection.BindingFlags.NonPublic |
                System.Reflection.BindingFlags.InvokeMethod);

            if (mi != null)
                mi.Invoke(this, null);
        }

        /// <summary>
        /// Creates the resource of the specified type and that belongs to the specified container.
        /// </summary>
        /// <param name="containerName">The name of the entity set to which the resource belongs.</param>
        /// <param name="fullTypeName">The full namespace-qualified type name of the resource.</param>
        /// <returns>
        /// The object representing a resource of specified type and belonging to the specified container.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        object System.Data.Services.IUpdatable.CreateResource(string containerName, string fullTypeName)
        {
            var t = Type.GetType(fullTypeName);
            var table = GetTableForType(t);

            object value = Construct(t);
            table.InsertOnSubmit(value);

            return (value);
        }

        /// <summary>
        /// Deletes the specified resource.
        /// </summary>
        /// <param name="targetResource">The resource to be deleted.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        void System.Data.Services.IUpdatable.DeleteResource(object targetResource)
        {
            var t = targetResource.GetType();
            var table = GetTableForType(t);
            table.DeleteOnSubmit(targetResource);
        }

        /// <summary>
        /// Gets the resource of the specified type identified by a query and type name.
        /// </summary>
        /// <param name="query">Language integratee query(LINQ) pointing to a particular resource.</param>
        /// <param name="fullTypeName">The fully qualified type name of resource.</param>
        /// <returns>
        /// An opaque object representing a resource of the specified type, referenced by the specified query.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        object System.Data.Services.IUpdatable.GetResource(System.Linq.IQueryable query, string fullTypeName)
        {
            object result = null;

            foreach (object item in query)
            {
                if (result != null)
                    throw new System.Data.Services.DataServiceException("A single resource is expected");
                result = item;
            }

            if (result == null)
                throw new System.Data.Services.DataServiceException(404, "Resource not found");

            if (fullTypeName != null && result.GetType().FullName != fullTypeName)
                throw new System.Data.Services.DataServiceException("Resource type mismatch");

            return result;
        }

        /// <summary>
        /// Gets the value of the specified property on the target object.
        /// </summary>
        /// <param name="targetResource">An opaque object that represents a resource.</param>
        /// <param name="propertyName">The name of the property whose value needs to be retrieved.</param>
        /// <returns></returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        object System.Data.Services.IUpdatable.GetValue(object targetResource, string propertyName)
        {
            var t = targetResource.GetType();
            var pi = GetPropertyInfoForType(t, propertyName, false);

            object value;

            try
            {
                value = pi.GetValue(targetResource, null);
            }
            catch (Exception ex)
            {
                throw new System.Data.Services.DataServiceException(
                    string.Format("Failed getting property {0} value", propertyName), ex);
            }
            return value;
        }

        /// <summary>
        /// Removes the specified value from the collection.
        /// </summary>
        /// <param name="targetResource">The target object that defines the property.</param>
        /// <param name="propertyName">The name of the property whose value needs to be updated.</param>
        /// <param name="resourceToBeRemoved">The property value that needs to be removed.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        void System.Data.Services.IUpdatable.RemoveReferenceFromCollection(object targetResource, string propertyName, object resourceToBeRemoved)
        {
            var t = targetResource.GetType();

            var collectionProperty = GetPropertyInfoForType(t, propertyName, false);
            var collection = collectionProperty.GetValue(targetResource, null) as System.Collections.IList;
            if (collection == null)
                return; // throw error

            collection.Remove(resourceToBeRemoved);
        }

        /// <summary>
        /// Returns the instance of the resource represented by the specified resource object.
        /// </summary>
        /// <param name="resource">The object representing the resource whose instance needs to be retrieved.</param>
        /// <returns>
        /// Returns the instance of the resource represented by the specified resource object.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        object System.Data.Services.IUpdatable.ResolveResource(object resource)
        {
            return resource;
        }

        /// <summary>
        /// Saves all the changes that have been made by using the <see cref="T:System.Data.Services.IUpdatable"/> APIs.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        void System.Data.Services.IUpdatable.SaveChanges()
        {
            try
            {
                SubmitChanges();
            }
            catch (Exception ex)
            {
                throw new System.Data.Services.DataServiceException("Error Saving Context. " + ex.GetBaseException().Message, ex);
            }
        }

        /// <summary>
        /// Sets the value of the specified reference property on the target object.
        /// </summary>
        /// <param name="targetResource">The target object that defines the property.</param>
        /// <param name="propertyName">The name of the property whose value needs to be updated.</param>
        /// <param name="propertyValue">The property value to be updated.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        void System.Data.Services.IUpdatable.SetReference(object targetResource, string propertyName, object propertyValue)
        {
            ((System.Data.Services.IUpdatable)this).SetValue(targetResource, propertyName, propertyValue);
        }

        /// <summary>
        /// Sets the value of the property with the specified name on the target resource to the specified property value.
        /// </summary>
        /// <param name="targetResource">The target object that defines the property.</param>
        /// <param name="propertyName">The name of the property whose value needs to be updated.</param>
        /// <param name="propertyValue">The property value for update.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        void System.Data.Services.IUpdatable.SetValue(object targetResource, string propertyName, object propertyValue)
        {
            var t = targetResource.GetType();
            var pi = GetPropertyInfoForType(t, propertyName, true);

            try
            {
                pi.SetValue(targetResource, propertyValue, null);
            }
            catch (Exception ex)
            {
                throw new System.Data.Services.DataServiceException(
                  string.Format("Error setting property {0} to {1}", propertyName, propertyValue), ex);
            }
        }

        /// <summary>
        /// Updates the resource identified by the parameter <paramref name="resource"/>.
        /// </summary>
        /// <param name="resource">The resource to be updated.</param>
        /// <returns></returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        object System.Data.Services.IUpdatable.ResetResource(object resource)
        {
            var t = resource.GetType();
            var table = GetTableForType(t);
            return table.GetOriginalEntityState(resource);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Reflection.PropertyInfo GetPropertyInfoForType(Type t, string propertyName, bool setter)
        {
            System.Reflection.PropertyInfo pi;

            try
            {
                System.Reflection.BindingFlags flags = System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance;
                flags |= setter ? System.Reflection.BindingFlags.SetProperty : System.Reflection.BindingFlags.GetProperty;

                pi = t.GetProperty(propertyName, flags);

                if (pi == null)
                    throw new System.Data.Services.DataServiceException(
                        string.Format("Failed to find property {0} on type {1}", propertyName, t.Name));
            }
            catch (Exception exception)
            {
                throw new System.Data.Services.DataServiceException(
                    string.Format("Error finding property {0}", propertyName), exception);
            }

            return (pi);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Data.Linq.ITable GetTableForType(Type t)
        {
            var table = GetTable(t);
            if (table == null)
                throw new System.Data.Services.DataServiceException(string.Format("No table found for type {0}", t.Name));

            return (table);
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private static object Construct(Type t)
        {
            var ci = t.GetConstructor(Type.EmptyTypes);

            if (ci == null)
                throw new System.Data.Services.DataServiceException(
                    string.Format("No default ctor found for type {0}", t.Name));

            return (ci.Invoke(null));
        }
        #endregion

        #region RuleManager
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private readonly CodeSmith.Data.Rules.RuleManager _ruleManager = new CodeSmith.Data.Rules.RuleManager();

        /// <summary>
        /// Gets the current <see cref="CodeSmith.Data.Rules.RuleManager"/> for the <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public CodeSmith.Data.Rules.RuleManager RuleManager
        {
            get { return _ruleManager; }
        }

        /// <summary>
        /// Sends changes made to retrieved objects to the underlying database.
        /// </summary>
        /// <param name="failureMode">How concurrency conflicts should be reported.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public override void SubmitChanges(System.Data.Linq.ConflictMode failureMode)
        {
            bool isValid = RuleManager.Run(this);

            if (!isValid)
                throw new CodeSmith.Data.Rules.BrokenRuleException(RuleManager.BrokenRules);

            PopulateLastAudit();
            BeforeSubmitChanges();
            base.SubmitChanges(failureMode);
            RefreshLastAudit();
            AfterSubmitChanges();
        }
        #endregion

        #region Auditing
        /// <summary>Called before the underlying DataContext.SubmitChanges is called.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void BeforeSubmitChanges();

        /// <summary>Called after the underlying DataContext.SubmitChanges is called.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void AfterSubmitChanges();

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private bool _auditingEnabled = true;

        /// <summary>
        /// Gets or sets a value indicating whether auditing is enabled.
        /// </summary>
        /// <value><c>true</c> if auditing is enabled; otherwise, <c>false</c>.</value>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public bool AuditingEnabled
        {
            get { return _auditingEnabled; }
            set { _auditingEnabled = value; }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private CodeSmith.Data.Audit.AuditLog _lastAudit;

        /// <summary>
        /// Gets the last <see cref="CodeSmith.Data.Audit.AuditLog"/>.
        /// </summary>
        /// <value>The last <see cref="CodeSmith.Data.Audit.AuditLog"/>.</value>
        /// <remarks>
        /// <see cref="AuditingEnabled"/> must be <c>true</c> for <see cref="LastAudit"/> to be populated.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public CodeSmith.Data.Audit.AuditLog LastAudit
        {
            get { return _lastAudit; }
        }

        /// <summary>
        /// Populates the <see cref="LastAudit"/> property with the <see cref="CodeSmith.Data.Audit.AuditLog"/>
        /// of changes in this <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        /// <remarks>
        /// <see cref="AuditingEnabled"/> must be <c>true</c> for <see cref="LastAudit"/> to be populated.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        protected virtual void PopulateLastAudit()
        {
            if (!AuditingEnabled)
                return;

            _lastAudit = CodeSmith.Data.Audit.AuditManager.CreateAuditLog(this);
        }

        /// <summary>
        /// Refresh the <see cref="AuditLog"/> values stored in the <see cref="LastAudit"/> after SubmitChanges call.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        protected virtual void RefreshLastAudit()
        {
            if (_lastAudit != null) 
                CodeSmith.Data.Audit.AuditManager.Refresh(_lastAudit);
        }
        #endregion

        /// <summary>
        /// Sends changes made to retrieved objects to the underlying database.
        /// </summary>
        /// <param name="refreshMode">Defines how to handle optimistic concurrency conflicts.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public void SubmitChanges(System.Data.Linq.RefreshMode refreshMode)
        {
            try
            {
                SubmitChanges(System.Data.Linq.ConflictMode.ContinueOnConflict);
            }
            catch (System.Data.Linq.ChangeConflictException)
            {
                foreach (var occ in ChangeConflicts)
                    occ.Resolve(refreshMode);

                SubmitChanges();
            }
        }
    }
}
#pragma warning restore 1591
