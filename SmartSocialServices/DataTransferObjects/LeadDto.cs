//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace SmartSocialServices.DataTransferObjects
{
    
    [DataContract(Name = "LeadDto", Namespace = "http://www.SmartSocial.com/dto/" , IsReference = true) ]
    public partial class LeadDto
    {
         #region Primitive Properties
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual int idLead
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string FirstName
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string LastName
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Email
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string CountryCode
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string PhoneNumber
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string ProductName
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Aliases
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string ProductURL
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Keywords
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string MarketSegments
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string OtherMarketSegments
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Competitors
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string PictureFileName
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Notes
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string IntakeToken
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string IntakeUrl
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual System.DateTime DateCreated
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual System.DateTime DateUpdated
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual Nullable<System.DateTime> IntakeEmailSentDate
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual bool IsActive
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual bool IsIntakeAnswered
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Company
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
    	[DataMember(EmitDefaultValue = false)]
        public virtual ICollection<ServiceSubscriptionDto> ServiceSubscriptions
        {
            get
            {
                if (_serviceSubscriptions == null)
                {
                    var newCollection = new FixupCollection<ServiceSubscriptionDto>();
                    newCollection.CollectionChanged += FixupServiceSubscriptions;
                    _serviceSubscriptions = newCollection;
                }
                return _serviceSubscriptions;
            }
            set
            {
                if (!ReferenceEquals(_serviceSubscriptions, value))
                {
                    var previousValue = _serviceSubscriptions as FixupCollection<ServiceSubscriptionDto>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupServiceSubscriptions;
                    }
                    _serviceSubscriptions = value;
                    var newValue = value as FixupCollection<ServiceSubscriptionDto>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupServiceSubscriptions;
                    }
                }
            }
        }
        private ICollection<ServiceSubscriptionDto> _serviceSubscriptions;

        #endregion

        #region Association Fixup
    
        private void FixupServiceSubscriptions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ServiceSubscriptionDto item in e.NewItems)
                {
                    item.Lead = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ServiceSubscriptionDto item in e.OldItems)
                {
                    if (ReferenceEquals(item.Lead, this))
                    {
                        item.Lead = null;
                    }
                }
            }
        }

        #endregion

    }
}
