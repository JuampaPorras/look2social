//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace SmartSocialServices.DataTransferObjects
{
    
    [DataContract(Name = "SocialPostDto", Namespace = "http://www.SmartSocial.com/dto/" , IsReference = true) ]
    public partial class SocialPostDto
    {
         #region Primitive Properties
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual int idSocialPost
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual Nullable<int> idSmartReport
        {
     
    		
            get { return _idSmartReport; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_idSmartReport != value)
                    {
                        if (SmartReport != null && SmartReport.idSmartReport != value)
                        {
                            SmartReport = null;
                        }
                        _idSmartReport = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _idSmartReport;
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string SocialNetwork
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string SenderScreenName
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string SenderProfileImgUrl
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual Nullable<int> SenderFollowersCount
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Message
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual Nullable<System.DateTime> MessageCreatedDate
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Permalink
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Country
        {
            get;
            set;
        }
    	
    	[DataMember(EmitDefaultValue = false)]
        public virtual string Product
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
    	[DataMember(EmitDefaultValue = false)]
        public virtual SmartReportDto SmartReport
        {
            get { return _smartReport; }
            set
            {
                if (!ReferenceEquals(_smartReport, value))
                {
                    var previousValue = _smartReport;
                    _smartReport = value;
                    FixupSmartReport(previousValue);
                }
            }
        }
        private SmartReportDto _smartReport;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupSmartReport(SmartReportDto previousValue)
        {
            if (previousValue != null && previousValue.SocialPosts.Contains(this))
            {
                previousValue.SocialPosts.Remove(this);
            }
    
            if (SmartReport != null)
            {
                if (!SmartReport.SocialPosts.Contains(this))
                {
                    SmartReport.SocialPosts.Add(this);
                }
                if (idSmartReport != SmartReport.idSmartReport)
                {
                    idSmartReport = SmartReport.idSmartReport;
                }
            }
            else if (!_settingFK)
            {
                idSmartReport = null;
            }
        }

        #endregion

    }
}
