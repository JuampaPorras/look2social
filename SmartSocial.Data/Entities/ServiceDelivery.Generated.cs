#pragma warning disable 1591
#pragma warning disable 0414        
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Linq;

namespace SmartSocial.Data
{
    /// <summary>
    /// The class representing the dbo.ServiceDelivery table.
    /// </summary>
    [System.Data.Linq.Mapping.Table(Name="dbo.ServiceDelivery")]
    [System.Runtime.Serialization.DataContract(IsReference = true)]
    [System.ComponentModel.DataAnnotations.ScaffoldTable(true)]
    [System.ComponentModel.DataAnnotations.MetadataType(typeof(SmartSocial.Data.ServiceDelivery.Metadata))]
    [System.Data.Services.Common.DataServiceKey("IdServiceDelivery")]
    [System.Diagnostics.DebuggerDisplay("IdServiceDelivery: {IdServiceDelivery}")]
    public partial class ServiceDelivery
        : LinqEntityBase, ICloneable 
    {
        #region Static Constructor
        /// <summary>
        /// Initializes the <see cref="ServiceDelivery"/> class.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        static ServiceDelivery()
        {
            AddSharedRules();
        }
        #endregion

        #region Default Constructor
        /// <summary>
        /// Initializes a new instance of the <see cref="ServiceDelivery"/> class.
        /// </summary>
        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public ServiceDelivery()
        {
            Initialize();
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void Initialize()
        {
            _serviceSubscription = default(System.Data.Linq.EntityRef<ServiceSubscription>);
            _smartReportList = new System.Data.Linq.EntitySet<SmartReport>(OnSmartReportListAdd, OnSmartReportListRemove);
            OnCreated();
        }
        #endregion

        #region Column Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private int _idServiceDelivery = default(int);

        /// <summary>
        /// Gets the idServiceDelivery column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "idServiceDelivery", Storage = "_idServiceDelivery", DbType = "int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true, CanBeNull = false)]
        [System.Runtime.Serialization.DataMember(Order = 1)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public int IdServiceDelivery
        {
            get { return _idServiceDelivery; }
            set
            {
                if (_idServiceDelivery != value)
                {
                    OnIdServiceDeliveryChanging(value);
                    SendPropertyChanging("IdServiceDelivery");
                    _idServiceDelivery = value;
                    SendPropertyChanged("IdServiceDelivery");
                    OnIdServiceDeliveryChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private Nullable<System.DateTime> _dateDelivered;

        /// <summary>
        /// Gets or sets the DateDelivered column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "DateDelivered", Storage = "_dateDelivered", DbType = "datetime")]
        [System.Runtime.Serialization.DataMember(Order = 2)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public Nullable<System.DateTime> DateDelivered
        {
            get { return _dateDelivered; }
            set
            {
                if (_dateDelivered != value)
                {
                    OnDateDeliveredChanging(value);
                    SendPropertyChanging("DateDelivered");
                    _dateDelivered = value;
                    SendPropertyChanged("DateDelivered");
                    OnDateDeliveredChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private Nullable<int> _idServiceSubscription;

        /// <summary>
        /// Gets or sets the IdServiceSubscription column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "IdServiceSubscription", Storage = "_idServiceSubscription", DbType = "int")]
        [System.Runtime.Serialization.DataMember(Order = 3)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public Nullable<int> IdServiceSubscription
        {
            get { return _idServiceSubscription; }
            set
            {
                if (_idServiceSubscription != value)
                {
                    if (_serviceSubscription.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    OnIdServiceSubscriptionChanging(value);
                    SendPropertyChanging("IdServiceSubscription");
                    _idServiceSubscription = value;
                    SendPropertyChanged("IdServiceSubscription");
                    OnIdServiceSubscriptionChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private string _insights;

        /// <summary>
        /// Gets or sets the Insights column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "Insights", Storage = "_insights", DbType = "nvarchar(MAX)")]
        [System.Runtime.Serialization.DataMember(Order = 4)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public string Insights
        {
            get { return _insights; }
            set
            {
                if (_insights != value)
                {
                    OnInsightsChanging(value);
                    SendPropertyChanging("Insights");
                    _insights = value;
                    SendPropertyChanged("Insights");
                    OnInsightsChanged();
                }
            }
        }

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private Nullable<System.DateTime> _deliveryDateTo;

        /// <summary>
        /// Gets or sets the DeliveryDateTo column value.
        /// </summary>
        [System.Data.Linq.Mapping.Column(Name = "DeliveryDateTo", Storage = "_deliveryDateTo", DbType = "datetime")]
        [System.Runtime.Serialization.DataMember(Order = 5)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public Nullable<System.DateTime> DeliveryDateTo
        {
            get { return _deliveryDateTo; }
            set
            {
                if (_deliveryDateTo != value)
                {
                    OnDeliveryDateToChanging(value);
                    SendPropertyChanging("DeliveryDateTo");
                    _deliveryDateTo = value;
                    SendPropertyChanged("DeliveryDateTo");
                    OnDeliveryDateToChanged();
                }
            }
        }
        #endregion

        #region Association Mapped Properties

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Data.Linq.EntityRef<ServiceSubscription> _serviceSubscription;

        /// <summary>
        /// Gets or sets the <see cref="ServiceSubscription"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "ServiceSubscription_ServiceDelivery", Storage = "_serviceSubscription", ThisKey = "IdServiceSubscription", OtherKey = "IdServiceSubscription", IsForeignKey = true, DeleteRule = "CASCADE")]
        [System.Runtime.Serialization.DataMember(Order = 6, EmitDefaultValue = false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public ServiceSubscription ServiceSubscription
        {
            get { return (serializing && !_serviceSubscription.HasLoadedOrAssignedValue) ? null : _serviceSubscription.Entity; }
            set
            {
                ServiceSubscription previousValue = _serviceSubscription.Entity;
                if (previousValue != value || _serviceSubscription.HasLoadedOrAssignedValue == false)
                {
                    OnServiceSubscriptionChanging(value);
                    SendPropertyChanging("ServiceSubscription");
                    if (previousValue != null)
                    {
                        _serviceSubscription.Entity = null;
                        previousValue.ServiceDeliveryList.Remove(this);
                    }
                    _serviceSubscription.Entity = value;
                    if (value != null)
                    {
                        value.ServiceDeliveryList.Add(this);
                        _idServiceSubscription = value.IdServiceSubscription;
                    }
                    else
                    {
                        _idServiceSubscription = default(Nullable<int>);
                    }
                    SendPropertyChanged("ServiceSubscription");
                    OnServiceSubscriptionChanged();
                }
            }
        }
        
        
        

        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private System.Data.Linq.EntitySet<SmartReport> _smartReportList;

        /// <summary>
        /// Gets or sets the <see cref="SmartReport"/> association.
        /// </summary>
        [System.Data.Linq.Mapping.Association(Name = "ServiceDelivery_SmartReport", Storage = "_smartReportList", ThisKey = "IdServiceDelivery", OtherKey = "IdServiceDelivery")]
        [System.Runtime.Serialization.DataMember(Order=7, EmitDefaultValue=false)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public System.Data.Linq.EntitySet<SmartReport> SmartReportList
        {
            get { return (serializing && !_smartReportList.HasLoadedOrAssignedValues) ? null : _smartReportList; }
            set { _smartReportList.Assign(value); }
        }
        
        

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnSmartReportListAdd(SmartReport entity)
        {
            SendPropertyChanging(null);
            entity.ServiceDelivery = this;
            SendPropertyChanged(null);
        }

        [System.Diagnostics.DebuggerNonUserCode]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private void OnSmartReportListRemove(SmartReport entity)
        {
            SendPropertyChanging(null);
            entity.ServiceDelivery = null;
            SendPropertyChanged(null);
        }
        #endregion

        #region Extensibility Method Definitions
        /// <summary>Called by the static constructor to add shared rules.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        static partial void AddSharedRules();
        /// <summary>Called when this instance is loaded.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnLoaded();
        /// <summary>Called when this instance is being saved.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        /// <summary>Called when this instance is created.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnCreated();
        /// <summary>Called when <see cref="IdServiceDelivery"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnIdServiceDeliveryChanging(int value);
        /// <summary>Called after <see cref="IdServiceDelivery"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnIdServiceDeliveryChanged();
        /// <summary>Called when <see cref="DateDelivered"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDateDeliveredChanging(Nullable<System.DateTime> value);
        /// <summary>Called after <see cref="DateDelivered"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDateDeliveredChanged();
        /// <summary>Called when <see cref="IdServiceSubscription"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnIdServiceSubscriptionChanging(Nullable<int> value);
        /// <summary>Called after <see cref="IdServiceSubscription"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnIdServiceSubscriptionChanged();
        /// <summary>Called when <see cref="Insights"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnInsightsChanging(string value);
        /// <summary>Called after <see cref="Insights"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnInsightsChanged();
        /// <summary>Called when <see cref="DeliveryDateTo"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDeliveryDateToChanging(Nullable<System.DateTime> value);
        /// <summary>Called after <see cref="DeliveryDateTo"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnDeliveryDateToChanged();
        /// <summary>Called when <see cref="ServiceSubscription"/> is changing.</summary>
        /// <param name="value">The new value.</param>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnServiceSubscriptionChanging(ServiceSubscription value);
        /// <summary>Called after <see cref="ServiceSubscription"/> has Changed.</summary>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        partial void OnServiceSubscriptionChanged();

        #endregion

        #region Serialization
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        private bool serializing;

        /// <summary>
        /// Called when serializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public void OnSerializing(System.Runtime.Serialization.StreamingContext context) {
            serializing = true;
        }

        /// <summary>
        /// Called when serialized.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnSerialized]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public void OnSerialized(System.Runtime.Serialization.StreamingContext context) {
            serializing = false;
        }

        /// <summary>
        /// Called when deserializing.
        /// </summary>
        /// <param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> for the serialization.</param>
        [System.Runtime.Serialization.OnDeserializing]
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public void OnDeserializing(System.Runtime.Serialization.StreamingContext context) {
            Initialize();
        }

        /// <summary>
        /// Deserializes an instance of <see cref="ServiceDelivery"/> from XML.
        /// </summary>
        /// <param name="xml">The XML string representing a <see cref="ServiceDelivery"/> instance.</param>
        /// <returns>An instance of <see cref="ServiceDelivery"/> that is deserialized from the XML string.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public static ServiceDelivery FromXml(string xml)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(ServiceDelivery));

            using (var sr = new System.IO.StringReader(xml))
            using (var reader = System.Xml.XmlReader.Create(sr))
            {
                return deserializer.ReadObject(reader) as ServiceDelivery;
            }
        }

        /// <summary>
        /// Deserializes an instance of <see cref="ServiceDelivery"/> from a byte array.
        /// </summary>
        /// <param name="buffer">The byte array representing a <see cref="ServiceDelivery"/> instance.</param>
        /// <returns>An instance of <see cref="ServiceDelivery"/> that is deserialized from the byte array.</returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public static ServiceDelivery FromBinary(byte[] buffer)
        {
            var deserializer = new System.Runtime.Serialization.DataContractSerializer(typeof(ServiceDelivery));

            using (var ms = new System.IO.MemoryStream(buffer))
            using (var reader = System.Xml.XmlDictionaryReader.CreateBinaryReader(ms, System.Xml.XmlDictionaryReaderQuotas.Max))
            {
                return deserializer.ReadObject(reader) as ServiceDelivery;
            }
        }
        
        #endregion

        #region Clone
        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        object ICloneable.Clone()
        {
            var serializer = new System.Runtime.Serialization.DataContractSerializer(GetType());
            using (var ms = new System.IO.MemoryStream())
            {
                serializer.WriteObject(ms, this);
                ms.Position = 0;
                return serializer.ReadObject(ms);
            }
        }

        /// <summary>
        /// Creates a new object that is a copy of the current instance.
        /// </summary>
        /// <returns>
        /// A new object that is a copy of this instance.
        /// </returns>
        /// <remarks>
        /// Only loaded <see cref="T:System.Data.Linq.EntityRef`1"/> and <see cref="T:System.Data.Linq.EntitySet`1" /> child accessions will be cloned.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public ServiceDelivery Clone()
        {
            return (ServiceDelivery)((ICloneable)this).Clone();
        }
        #endregion

        #region Detach Methods
        /// <summary>
        /// Detach this instance from the <see cref="System.Data.Linq.DataContext"/>.
        /// </summary>
        /// <remarks>
        /// Detaching the entity will stop all lazy loading and allow it to be added to another <see cref="System.Data.Linq.DataContext"/>.
        /// </remarks>
        [System.CodeDom.Compiler.GeneratedCode("CodeSmith", "6.0.0.0")]
        public override void Detach()
        {
            if (!IsAttached())
                return;

            base.Detach();
            _serviceSubscription = Detach(_serviceSubscription);
            _smartReportList = Detach(_smartReportList, OnSmartReportListAdd, OnSmartReportListRemove);
        }
        #endregion
    }
}
#pragma warning restore 1591
#pragma warning restore 0414
